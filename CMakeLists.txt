CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

# initial setup

PROJECT( nael )

LIST( APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules )
INCLUDE( source_group_tree )
INCLUDE( thirdparty )
THIRDPARTY_DIR( ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty )

if(CMAKE_COMPILER_IS_GNUCXX OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -Wall")
endif()

SET( NAEL_ROOT ${CMAKE_CURRENT_SOURCE_DIR} CACHE PATH "nael root" )
SET( NAEL_INCLUDE_DIRS ${NAEL_ROOT}/include "nael include dirs" )

INCLUDE_DIRECTORIES( ${NAEL_INCLUDE_DIRS} )

# Dependencies 

FIND_PACKAGE( SDL REQUIRED )
INCLUDE_DIRECTORIES( ${SDL_INCLUDE_DIR} )
LIST( APPEND DEPS ${SDL_LIBRARY} )

FIND_PACKAGE( GLEW REQUIRED )
INCLUDE_DIRECTORIES( ${GLEW_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${GLEW_INCLUDE_PATH} )
FIND_PACKAGE( OpenGL REQUIRED )
INCLUDE_DIRECTORIES( ${OPENGL_INCLUDE_DIR} )
LIST( APPEND DEPS ${GLEW_LIBRARY} ${OPENGL_gl_LIBRARY} )
FIND_PACKAGE( Box2D REQUIRED )
INCLUDE_DIRECTORIES( ${BOX2D_INCLUDE_DIR} )
LIST( APPEND DEPS ${GLEW_LIBRARY} ${BOX2D_INCLUDE_PATH} )
# nael project

FILE( GLOB_RECURSE sources ${NAEL_ROOT}/src/*.cpp )
FILE( GLOB_RECURSE headers ${NAEL_ROOT}/include/*.hpp )

source_group_tree("Header Files" include)
source_group_tree("Source Files" src)

ADD_EXECUTABLE( nael ${sources} ${headers} )
TARGET_LINK_LIBRARIES( nael ${DEPS} )
