namespace {

std::map<SDLKey,KeyboardEvent::Key> init_keyMap() {
	std::map<SDLKey,KeyboardEvent::Key> keyMapping;
	keyMapping[SDLK_BACKSPACE] = KeyboardEvent::KEY_BACKSPACE;
	keyMapping[SDLK_TAB] = KeyboardEvent::KEY_TAB;
	keyMapping[SDLK_CLEAR] = KeyboardEvent::KEY_CLEAR;
	keyMapping[SDLK_RETURN] = KeyboardEvent::KEY_RETURN;
	keyMapping[SDLK_PAUSE] = KeyboardEvent::KEY_PAUSE;
	keyMapping[SDLK_ESCAPE] = KeyboardEvent::KEY_ESCAPE;
	keyMapping[SDLK_SPACE] = KeyboardEvent::KEY_SPACE;
	keyMapping[SDLK_EXCLAIM] = KeyboardEvent::KEY_EXCLAIM;
	keyMapping[SDLK_QUOTEDBL] = KeyboardEvent::KEY_QUOTEDBL;
	keyMapping[SDLK_HASH] = KeyboardEvent::KEY_HASH;
	keyMapping[SDLK_DOLLAR] = KeyboardEvent::KEY_DOLLAR;
	keyMapping[SDLK_AMPERSAND] = KeyboardEvent::KEY_AMPERSAND;
	keyMapping[SDLK_QUOTE] = KeyboardEvent::KEY_QUOTE;
	keyMapping[SDLK_LEFTPAREN] = KeyboardEvent::KEY_LEFTPAREN;
	keyMapping[SDLK_RIGHTPAREN] = KeyboardEvent::KEY_RIGHTPAREN;
	keyMapping[SDLK_ASTERISK] = KeyboardEvent::KEY_ASTERISK;
	keyMapping[SDLK_PLUS] = KeyboardEvent::KEY_PLUS;
	keyMapping[SDLK_COMMA] = KeyboardEvent::KEY_COMMA;
	keyMapping[SDLK_MINUS] = KeyboardEvent::KEY_MINUS;
	keyMapping[SDLK_PERIOD] = KeyboardEvent::KEY_PERIOD;
	keyMapping[SDLK_SLASH] = KeyboardEvent::KEY_SLASH;
	keyMapping[SDLK_0] = KeyboardEvent::KEY_0;
	keyMapping[SDLK_1] = KeyboardEvent::KEY_1;
	keyMapping[SDLK_2] = KeyboardEvent::KEY_2;
	keyMapping[SDLK_3] = KeyboardEvent::KEY_3;
	keyMapping[SDLK_4] = KeyboardEvent::KEY_4;
	keyMapping[SDLK_5] = KeyboardEvent::KEY_5;
	keyMapping[SDLK_6] = KeyboardEvent::KEY_6;
	keyMapping[SDLK_7] = KeyboardEvent::KEY_7;
	keyMapping[SDLK_8] = KeyboardEvent::KEY_8;
	keyMapping[SDLK_9] = KeyboardEvent::KEY_9;
	keyMapping[SDLK_COLON] = KeyboardEvent::KEY_COLON;
	keyMapping[SDLK_SEMICOLON] = KeyboardEvent::KEY_SEMICOLON;
	keyMapping[SDLK_LESS] = KeyboardEvent::KEY_LESS;
	keyMapping[SDLK_EQUALS] = KeyboardEvent::KEY_EQUALS;
	keyMapping[SDLK_GREATER] = KeyboardEvent::KEY_GREATER;
	keyMapping[SDLK_QUESTION] = KeyboardEvent::KEY_QUESTION;
	keyMapping[SDLK_AT] = KeyboardEvent::KEY_AT;
	keyMapping[SDLK_LEFTBRACKET] = KeyboardEvent::KEY_LEFTBRACKET;
	keyMapping[SDLK_BACKSLASH] = KeyboardEvent::KEY_BACKSLASH;
	keyMapping[SDLK_RIGHTBRACKET] = KeyboardEvent::KEY_RIGHTBRACKET;
	keyMapping[SDLK_CARET] = KeyboardEvent::KEY_CARET;
	keyMapping[SDLK_UNDERSCORE] = KeyboardEvent::KEY_UNDERSCORE;
	keyMapping[SDLK_BACKQUOTE] = KeyboardEvent::KEY_BACKQUOTE;
	keyMapping[SDLK_a] = KeyboardEvent::KEY_a;
	keyMapping[SDLK_b] = KeyboardEvent::KEY_b;
	keyMapping[SDLK_c] = KeyboardEvent::KEY_c;
	keyMapping[SDLK_d] = KeyboardEvent::KEY_d;
	keyMapping[SDLK_e] = KeyboardEvent::KEY_e;
	keyMapping[SDLK_f] = KeyboardEvent::KEY_f;
	keyMapping[SDLK_g] = KeyboardEvent::KEY_g;
	keyMapping[SDLK_h] = KeyboardEvent::KEY_h;
	keyMapping[SDLK_i] = KeyboardEvent::KEY_i;
	keyMapping[SDLK_j] = KeyboardEvent::KEY_j;
	keyMapping[SDLK_k] = KeyboardEvent::KEY_k;
	keyMapping[SDLK_l] = KeyboardEvent::KEY_l;
	keyMapping[SDLK_m] = KeyboardEvent::KEY_m;
	keyMapping[SDLK_n] = KeyboardEvent::KEY_n;
	keyMapping[SDLK_o] = KeyboardEvent::KEY_o;
	keyMapping[SDLK_p] = KeyboardEvent::KEY_p;
	keyMapping[SDLK_q] = KeyboardEvent::KEY_q;
	keyMapping[SDLK_r] = KeyboardEvent::KEY_r;
	keyMapping[SDLK_s] = KeyboardEvent::KEY_s;
	keyMapping[SDLK_t] = KeyboardEvent::KEY_t;
	keyMapping[SDLK_u] = KeyboardEvent::KEY_u;
	keyMapping[SDLK_v] = KeyboardEvent::KEY_v;
	keyMapping[SDLK_w] = KeyboardEvent::KEY_w;
	keyMapping[SDLK_x] = KeyboardEvent::KEY_x;
	keyMapping[SDLK_y] = KeyboardEvent::KEY_y;
	keyMapping[SDLK_z] = KeyboardEvent::KEY_z;
	keyMapping[SDLK_DELETE] = KeyboardEvent::KEY_DELETE;
	keyMapping[SDLK_KP0] = KeyboardEvent::KEY_KP0;
	keyMapping[SDLK_KP1] = KeyboardEvent::KEY_KP1;
	keyMapping[SDLK_KP2] = KeyboardEvent::KEY_KP2;
	keyMapping[SDLK_KP3] = KeyboardEvent::KEY_KP3;
	keyMapping[SDLK_KP4] = KeyboardEvent::KEY_KP4;
	keyMapping[SDLK_KP5] = KeyboardEvent::KEY_KP5;
	keyMapping[SDLK_KP6] = KeyboardEvent::KEY_KP6;
	keyMapping[SDLK_KP7] = KeyboardEvent::KEY_KP7;
	keyMapping[SDLK_KP8] = KeyboardEvent::KEY_KP8;
	keyMapping[SDLK_KP9] = KeyboardEvent::KEY_KP9;
	keyMapping[SDLK_KP_PERIOD] = KeyboardEvent::KEY_KP_PERIOD;
	keyMapping[SDLK_KP_DIVIDE] = KeyboardEvent::KEY_KP_DIVIDE;
	keyMapping[SDLK_KP_MULTIPLY] = KeyboardEvent::KEY_KP_MULTIPLY;
	keyMapping[SDLK_KP_MINUS] = KeyboardEvent::KEY_KP_MINUS;
	keyMapping[SDLK_KP_PLUS] = KeyboardEvent::KEY_KP_PLUS;
	keyMapping[SDLK_KP_ENTER] = KeyboardEvent::KEY_KP_ENTER;
	keyMapping[SDLK_KP_EQUALS] = KeyboardEvent::KEY_KP_EQUALS;
	keyMapping[SDLK_UP] = KeyboardEvent::KEY_UP;
	keyMapping[SDLK_DOWN] = KeyboardEvent::KEY_DOWN;
	keyMapping[SDLK_RIGHT] = KeyboardEvent::KEY_RIGHT;
	keyMapping[SDLK_LEFT] = KeyboardEvent::KEY_LEFT;
	keyMapping[SDLK_INSERT] = KeyboardEvent::KEY_INSERT;
	keyMapping[SDLK_HOME] = KeyboardEvent::KEY_HOME;
	keyMapping[SDLK_END] = KeyboardEvent::KEY_END;
	keyMapping[SDLK_PAGEUP] = KeyboardEvent::KEY_PAGEUP;
	keyMapping[SDLK_PAGEDOWN] = KeyboardEvent::KEY_PAGEDOWN;
	keyMapping[SDLK_F1] = KeyboardEvent::KEY_F1;
	keyMapping[SDLK_F2] = KeyboardEvent::KEY_F2;
	keyMapping[SDLK_F3] = KeyboardEvent::KEY_F3;
	keyMapping[SDLK_F4] = KeyboardEvent::KEY_F4;
	keyMapping[SDLK_F5] = KeyboardEvent::KEY_F5;
	keyMapping[SDLK_F6] = KeyboardEvent::KEY_F6;
	keyMapping[SDLK_F7] = KeyboardEvent::KEY_F7;
	keyMapping[SDLK_F8] = KeyboardEvent::KEY_F8;
	keyMapping[SDLK_F9] = KeyboardEvent::KEY_F9;
	keyMapping[SDLK_F10] = KeyboardEvent::KEY_F10;
	keyMapping[SDLK_F11] = KeyboardEvent::KEY_F11;
	keyMapping[SDLK_F12] = KeyboardEvent::KEY_F12;
	keyMapping[SDLK_F13] = KeyboardEvent::KEY_F13;
	keyMapping[SDLK_F14] = KeyboardEvent::KEY_F14;
	keyMapping[SDLK_F15] = KeyboardEvent::KEY_F15;
	keyMapping[SDLK_NUMLOCK] = KeyboardEvent::KEY_NUMLOCK;
	keyMapping[SDLK_CAPSLOCK] = KeyboardEvent::KEY_CAPSLOCK;
	keyMapping[SDLK_SCROLLOCK] = KeyboardEvent::KEY_SCROLLOCK;
	keyMapping[SDLK_RSHIFT] = KeyboardEvent::KEY_RSHIFT;
	keyMapping[SDLK_LSHIFT] = KeyboardEvent::KEY_LSHIFT;
	keyMapping[SDLK_RCTRL] = KeyboardEvent::KEY_RCTRL;
	keyMapping[SDLK_LCTRL] = KeyboardEvent::KEY_LCTRL;
	keyMapping[SDLK_RALT] = KeyboardEvent::KEY_RALT;
	keyMapping[SDLK_LALT] = KeyboardEvent::KEY_LALT;
	keyMapping[SDLK_RMETA] = KeyboardEvent::KEY_RMETA;
	keyMapping[SDLK_LMETA] = KeyboardEvent::KEY_LMETA;
	keyMapping[SDLK_LSUPER] = KeyboardEvent::KEY_LSUPER;
	keyMapping[SDLK_RSUPER] = KeyboardEvent::KEY_RSUPER;
	keyMapping[SDLK_MODE] = KeyboardEvent::KEY_MODE;
	keyMapping[SDLK_HELP] = KeyboardEvent::KEY_HELP;
	keyMapping[SDLK_PRINT] = KeyboardEvent::KEY_PRINT;
	keyMapping[SDLK_SYSREQ] = KeyboardEvent::KEY_SYSREQ;
	keyMapping[SDLK_BREAK] = KeyboardEvent::KEY_BREAK;
	keyMapping[SDLK_MENU] = KeyboardEvent::KEY_MENU;
	keyMapping[SDLK_POWER] = KeyboardEvent::KEY_POWER;
	keyMapping[SDLK_EURO] = KeyboardEvent::KEY_EURO;
	return keyMapping;
}

KeyboardEvent::Key keyMap(SDLKey k) {
	static const std::map<SDLKey,KeyboardEvent::Key> mapping = init_keyMap();
	return mapping.at(k);
}

};
